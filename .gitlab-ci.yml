image: python:3.11-alpine

stages:
  - build
  - linttest
  - covtest
  - package
  - deploy

variables:
  DJANGO_SECRET_KEY: $DJANGO_SECRET_KEY_GITLAB
  SENTRY_DSN: $SENTRY_DSN_GITLAB

build-job:
  stage: build
  script:
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - python replace_config.py
    - echo "Compile complete."

lint-test-job:
  stage: linttest
  script:
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - python replace_config.py
    - flake8
    - echo "Linting complete."
  rules:
    - allow_failure: false

unit-test-job:
  stage: covtest
  script:
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - python replace_config.py
    - pytest --cov=.
    - coverage report --fail-under=80
    - echo "Test with coverage >= 80 complete."
  rules:
    - allow_failure: false

package-job:
  stage: package
  only: 
    - master
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375  
  script:
    - apk add --no-cache docker
    - apk add --no-cache build-base libffi-dev openssl-dev
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --build-arg DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY_GITLAB --build-arg SENTRY_DSN=$SENTRY_DSN_GITLAB .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

deploy-job:
  stage: deploy
  only: 
    - master
  environment: production
  script:
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - python replace_config.py
    - echo "Deploying application..."
    - python manage.py collectstatic --noinput
    - echo "Application successfully deployed."
